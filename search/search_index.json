{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome!  This guide aims to familiaze you with the essential concept of working with databases, including understanding data types, creating schemas and tables, setting up MySQL Workbench, and executing simple SELECT statements. This documentation will provide you with the basic knowledge to get started with MySQL in general and MySQL WorkBench in details.</p> <p> MySQL Workbench is a visual database design tool that integrates SQL development, administration, database design, creation and maintenance into a single integrated development environment for the MySQL database system.</p>"},{"location":"#intended-users","title":"Intended Users","text":"<p>This documentation is intended for:</p> <ul> <li> <p>New users to MySQL to learn about databases</p> </li> <li> <p>Second-term Full-stack Web Development student of BCIT.</p> </li> </ul>"},{"location":"#prerequisite-knowledge","title":"Prerequisite Knowledge","text":"<ul> <li>Have a basic knowledge of Microsoft Excel:<ul> <li>Know how to create a simple table with data in rows and columns.</li> <li>Know how to format a table, and what data type should be in a specific cell.</li> </ul> </li> <li>Set up a connection from MySQL Workbench to MySQL server.</li> </ul>"},{"location":"#software-requirements","title":"Software Requirements","text":"<ul> <li> <p>MySQL Server 8.0</p> </li> <li> <p>MySQL Workbench 8.0</p> </li> </ul> <p>Info</p> <p>MySQL Workbench and Server can be found in the same installation wizard</p>"},{"location":"#procedures-overview","title":"Procedures Overview","text":"<p>Here's a summary of the main sections covered in the documentation:</p> <ul> <li>Installing MySQL</li> <li>Understanding Schemas and Tables</li> <li>Implementing Select Statements</li> </ul>"},{"location":"#typographical-conventions","title":"Typographical Conventions","text":"<ol> <li> <p>When you see bold text, it\u2019s a mouse action:</p> <p>E.g Click [File, New Query Tab] to create a new query tab to type commands for your table.</p> </li> <li> <p>When you see [square brackets], it\u2019s action on MySQL Workbench:</p> <p>E.g Right click on [Table], click [Create Table] to create a new table in <code>test-constrainst-e-nguyen schema</code>.</p> </li> <li> <p>When you see &lt; angle brackets &gt;, it should be replaced by your table name or your schema's name.</p> </li> <li> <p>When you see { curly brackets }, it defines the list of columns</p> </li> <li> <p>Some queries have a clickable <code>+</code> button to show more explanation for these queries:</p> <pre><code>SELECT P_CODE, P_DESCRIPT, P_PRICE\nFROM PRODUCT\nORDER BY P_PRICE DESC; -- (1)!\n</code></pre> <ol> <li> The default order in the <code>ORDER BY</code> clause is ascending. You can choose to include the keyword ASC after the column name, but it's optional. Additionally, using <code>DESC</code> specifies descending order.</li> </ol> </li> <li> <p>Some queries have a highlight line to show a modified code compared with the previous one to let you know the changes:</p> <pre><code>SELECT V_STATE, COUNT(*) AS 'Count by State'\nFROM VENDOR\nGROUP BY V_STATE;\n</code></pre> </li> <li> <p>Each example will include a content tab with the query structure and a real-life example:</p> QueryExample <pre><code>SELECT { * | column1, column2 }\nFROM &lt;table&gt;\nORDER BY { columnA, columnB };\n</code></pre> <pre><code>SELECT CUS_LNAME, CUS_FNAME, CUS_INITIAL\nFROM CUSTOMER\nORDER BY CUS_LNAME, CUS_FNAME;\n</code></pre> </li> <li> <p>File names, schemas, tables, commands in line are shown as a same format: <code>test-constrainst-e-nguyen</code>.</p> </li> <li>Sections, name of applications, or pages are shown as a same format: MySQL Workbench</li> </ol>"},{"location":"#notes-and-warning-messages","title":"Notes and Warning Messages","text":"<p>Note</p> <p>Indicates important information.</p> <p>Info</p> <p>Indicates additional information.</p> <p>Tips</p> <p>Some helpful tips to enhance your understanding.</p> <p>Warning</p> <p>Some content need to read carefully before proceeding.</p> <p>Success</p> <p>Indicates successful results.</p>"},{"location":"#documentation-goals","title":"Documentation Goals","text":"<ul> <li>Guide through the installation of MySQL.</li> <li>Provide insights into using MySQL Workbench.</li> <li>Guide through the creation and understanding of Schemas and Tables.</li> <li>Cover the fundamentals of querying databases, focusing on the SELECT statement with single tables.</li> </ul>"},{"location":"Glossary/","title":"Glossary","text":"Term Definition Database A structured collection of data organized in tables, schemas, views, etc. Table A structured set of data elements organized in rows and columns. SQL Structured Query Language, a standard language for managing and manipulating databases. Query A query is a command that is used to retrieve information from a database. Schema A schema can be another term for database. It also represents the model itself in how data is organised, and represented. Connection A link established between MySQL Workbench and a MySQL server. Primary Key A unique identifier for a record in a table. Foreign Key A field in one table that refers to the primary key in another table. Alias an alternative name given to a table or column in a query to make the output more readable or to simplify complex queries."},{"location":"InstallingMySQL/","title":"Installing MySQL","text":""},{"location":"InstallingMySQL/#overview","title":"Overview","text":"<p>The goal of this section is to serve as a detailed guide for installing MySQL 8 on a Windows 10 or a Mac environment.</p>"},{"location":"InstallingMySQL/#install-mysql-on-windows","title":"Install MySQL on Windows","text":"<ol> <li> <p>Navigate to MySQL's official website and download the full MySQL installer package     </p> <p>Info</p> <p>You DO NOT need to sign up, instead click No thanks, just start my download.</p> </li> <li> <p>Execute the downloaded installer file, allowing User Account Control to authorize changes to your device. Accept the License Agreement and select the [Custom] option in Choosing a Setup Type.</p> <p></p> </li> <li> <p>It's suggested installing the following components for a comprehensive setup:</p> <ul> <li>MySQL Server 8.0.11 (X64)</li> <li>MySQL Workbench 8.0.11 (X64)</li> <li>MySQL Shell 8.0.11 (X64)</li> <li>Connector/ODBC 8.0.11 (X64)</li> <li>MySQL Documentation 8.0.11 (X86)</li> <li>Samples and Examples 8.0.11 (X86)</li> </ul> <p></p> <p>Note</p> <p>It is advised to select the latest available versions of these components.</p> </li> <li> <p>Install Microsoft Visual C++ Redistributable.</p> <p></p> </li> <li> <p>Click execute and wait untill all products will be installed.</p> <p></p> </li> <li> <p>Rerun MySQL Installer. Click reconfigure, under Quick Action, next to MySQL Server.     </p> <p>Tips</p> <p>You can rerun it by going to your Windows Start Menu</p> </li> <li> <p>The configuration process involves setting up MySQL as a standalone server, configuring development computer settings, and choosing strong password encryption for authentication.</p> <p>Note</p> <p>The install wizard for this software changes frequently. If what you see is a bit different from this guide, you can just go with the default options and keep installing.</p> <ul> <li> <p>Group Replication</p> <p>Click Standalone</p> <p></p> </li> <li> <p>Type and Networking</p> <p>Choose [Development Computer for Config Type], click [Show Advanced Options], keep all other defaults</p> <p></p> </li> <li> <p>Authentication method</p> <p>Click [Use Strong Password Encryption for Authentication]. Then, click next and create a strong root password.</p> <p>Note</p> <p>Create a root password and make a note of it for future reference.</p> <p></p> </li> <li> <p>Windows Service</p> <p>There should be all default options.</p> <p></p> </li> <li> <p>Plugins and Extension</p> <p>Leave the MySQL Document Store feature unchecked because we are not going to use it.</p> <p></p> </li> <li> <p>Advanced Options</p> <p>There should be all default options.</p> <p></p> </li> <li> <p>Apply Configuration</p> <p>Click on execute button.</p> </li> </ul> </li> <li> <p>Click reconfigure next to Samples and Examples</p> <p></p> </li> <li> <p>Type your root password that you created at Authentication method section. Click [Check], then click [Next].</p> <p></p> <p>Apply Configuration</p> <p>Click on execute button, wait until it finished, click on next button.</p> </li> <li> <p>Verify connectivity to MySQL via the Command Prompt using the root user credentials.     Click [Start Menu] \u2013 type <code>cmd</code> and click [Command Prompt Desktop App]. Then, inside prompt, type <code>mysql -u root -p</code>, it will connect to the localhost with user root.     Your promt should change to <code>mysql&gt;</code>. Run command <code>show variables like \"version\";</code>, the app will return the version of your MySQL.</p> </li> </ol>"},{"location":"InstallingMySQL/#install-mysql-on-mac","title":"Install MySQL on Mac","text":"<ol> <li> <p>Navigate to MySQL's official website and download macOS 14 (x86, 64-bit), DMG Archive version for installing MySQL Community Server.</p> <p></p> <p>Note</p> <p>You DO NOT need to sign up, instead click No thanks, just start my download</p> </li> <li> <p>Open the <code>DMG file</code> from the Downloads folder, then run the <code>PKG file</code> within to start the installation process.</p> <p>Warning</p> <p>The system might warn you about installing this package. Click allow to continue.</p> </li> <li> <p>Follow the steps in the MySQL Community Installation Wizard, agreeing to the License Agreement, leaving the default install directory and selecting [Strong Password Encryption] when prompted.</p> <p></p> <p>Create a new password for your MySQL root account and remember it, as it will be needed for login.</p> <p>Confirm the successful installation by clicking [Close] at the completion screen.</p> <p></p> </li> <li> <p>Go to MySQL's official website to install MySQL Workbench. Download the same package as you did for Community Server, and open it.    Drag the MySQL Workbench icon to the Applications folder to install. Launch MySQL Workbench from the Applications folder.</p> <p>Note</p> <p>If macOS blocks the application because it cannot verify the developer, proceed to [System Preferences] &gt; [Security &amp; Privacy] and click [Open Anyway].</p> </li> <li> <p>Try to run MySQL Workbench.</p> <p>Note</p> <p>If macOS blocks the application because it cannot be checked for malicious, proceed to [System Preferences] &gt; [Security &amp; Privacy] and click [Open Anyway].</p> </li> <li> <p>Verify connectivity to MySQL via the Terminal app using the root user credentials.    Open the Terminal App. Then, type <code>mysql -u root -p</code>, it will connect to the localhost with user root.    Your promt should change to <code>mysql&gt;</code>. Run command <code>show variables like \"version\";</code>, the app will return the version of your MySQL</p> </li> </ol>"},{"location":"InstallingMySQL/#mysql-workbench","title":"MySQL Workbench","text":"<ol> <li> <p>Open MySQL Workbench     It will look like this when you open it:</p> <p></p> <p>Note</p> <p>The MySQL Workbench interface is consistent across both Windows and Mac platforms, therefore, this documentation will not differentiate between the two.</p> <p>If you don't have any connections under MySQL Connections, you can create a new one by clicking on  button</p> <p>Enter a connection name and leave all defaults. Click Ok</p> <p></p> <p>Tips</p> <p>You can click on [Test Connection] button before pressing [OK] to see if it works. It will ask for your root password.</p> </li> <li> <p>Open your connection by double clicking on it and enter your root password.     Once open it will look like this</p> <p></p> <p>The MySQL Workbench interface features four primary areas:</p> <ul> <li>The Schema (or Database) Section, located at the right, displays all the databases, tables, views, procedures, and functions.</li> <li>At the top, the Query Section is where queries are entered or SQL files are opened. The lightning bolt icon with cursor  allows for the execution of individual queries.</li> <li>Results from executed queries, such as <code>SELECT</code> or <code>SHOW TABLES</code> commands, are shown in the Result Grid directly below the Query Section.</li> <li>Additional information about executed queries is found in the Output Section, including the number of rows returned, execution time, or errors, along with hints for correcting syntax issues.</li> </ul> </li> <li> <p>Practice Time!     In the Query type the following command:     <code>SHOW VARIABLES LIKE 'version';</code>     and click .</p> <p>Info</p> <p>The MYSQL keywords are case insensitive, so you can type it both lowercase and uppercase (ex. show variables like 'version';).</p> <p>Success</p> <p>The result should look like this:</p> <p></p> </li> </ol>"},{"location":"InstallingMySQL/#conclusion","title":"Conclusion","text":"<p>By the end of this section, you will have successfully learned the following:</p> <ul> <li>How to install MySQL on your computer.</li> <li>How to connect to MySQL using the MySQL Workbench.</li> <li>How to run queries in MySQL Workbench.</li> </ul> <p>Great work!  To deepen your understanding of MySQL schemas and tables, make sure to explore Schemas and Tables.</p>"},{"location":"SchemasAndTables/","title":"Schemas and Tables","text":""},{"location":"SchemasAndTables/#overview","title":"Overview","text":"<p>In this section, you will learn how to create a schema, and add a table to a schema to in order to benefit from the usage of database management software. Database management software like MySQL allows for better data security, data sharing and can help reduce data redundancies.</p> <p>Warning</p> <p>Due to the limitations of our documentation, an understanding on configuring your MySQL server and configuring a connection is not covered. However, it is a pre-requisite to creating a schema or table.</p>"},{"location":"SchemasAndTables/#creating-a-schema","title":"Creating a Schema","text":"<ol> <li> <p>Open MySQL Workbench.</p> </li> <li> <p>Connect to your MySQL database by Clicking on your previously configured connection, </p> <p></p> </li> <li> <p>Right Click in the whitespace of the navigator panel (by default on the left side of the application window).</p> </li> <li> <p>Click create schema from the dropdown menu. </p> <p></p> <p>Warning</p> <p>Ensure that you are in the schemas tab and not the Administration tab (option at the bottom of the navigator section)</p> <p>A new panel should appear in the main area of the application.</p> </li> <li> <p>Specify a name for your schema in the newly opened panel.</p> </li> <li> <p>Click on the apply button at the bottom right of the panel. </p> <p></p> <p>Upon clicking apply, you will be prompted to review the SQL statement that will run to create your new schema.</p> <p>The prompt will look like this:</p> <p></p> </li> <li> <p>Verify that the name of the schema is correct.</p> </li> <li> <p>Click apply to create the schema or Click cancel to make any changes.</p> <p>Once created our Schema should appear in the schema list automatically. </p> </li> </ol> <p>Success</p> <p></p> <p>Congratulations, you have created your first schema!</p> <p>Tips</p> <p>We can close the schema panel that was previously opened for us once our schema has been created. This helps to reduce cluttering our workspace with unnecessary tabs.</p>"},{"location":"SchemasAndTables/#creating-a-table","title":"Creating a Table","text":"<ol> <li> <p>Double Click the schema name to specify the schema to use.</p> <p></p> <p>The schema name becomes bold once it is selected and should expand to show additional options.</p> <p>If the schema has not expanded, Click on the triangular icon to the left of the schema name to expand it. </p> </li> <li> <p>Right Click on Tables</p> </li> <li> <p>Click Create Table from the dropdown menu. </p> <p></p> <p>A new panel should appear in the main area of the application. </p> <p>Specify your table name, column names, column data types and column options.</p> <p></p> <p>Tips</p> <p>For more information on MySQL data types and column options visit:</p> <ul> <li>MySQL 8.0 Data Types</li> <li>MySQL 8.0 Create Table Options</li> </ul> </li> <li> <p>Click on the apply button once you are ready to create your table.</p> <p>Upon clicking apply, you will be prompted to review the SQL statement that creates your new table and the columns within it:</p> <p></p> </li> <li> <p>Verify that the table name, columns and column properties are correct.</p> </li> <li>Click apply to create your table.</li> </ol> <p>Success</p> <p></p> <p>Congratulations, you have added a table to your schema!</p> <p>Tips</p> <p>The new table panel can be closed after the table has been made. </p> <p>If you would like to modify the properties of the table in the future using the user interface simply reopen the panel by:</p> <ol> <li>Right clicking the table name from the list of tables within your schema.</li> <li>Clicking alter table.</li> </ol>"},{"location":"SchemasAndTables/#adding-data-to-a-table","title":"Adding data to a Table","text":"<ol> <li>Right Click on your table from the table list in your schema.</li> <li> <p>Click Select Rows - Limit 1000 from the dropdown menu.</p> <p></p> <p>This runs a SELECT query for entries in your table. </p> <p>View our documentation on SELECT Statements for more information on SELECT queries.</p> <p>Just below the main window, you will find the SELECT results for your table: </p> </li> <li> <p>Enter your data into their respective columns.</p> <p></p> <p>Warning</p> <p>MySQL will enforce table rules and column rules on any data you attempt to add and will error if it does not follow the table data types, or set rules.</p> </li> <li> <p>Click on the apply button below the results when you're ready to add the data to your table.</p> <p>You will be asked to review the SQL statement that inserts your data into your table: </p> </li> <li> <p>Click on apply after confirming that the data is correct to add it to your table.</p> </li> </ol> <p>Success</p> <p></p> <p>Congratulations, you have added data to your table!</p>"},{"location":"SchemasAndTables/#conclusion","title":"Conclusion","text":"<p>By completing this section, you will have learned the following:</p> <ul> <li>How to create a new schema.</li> <li>How to create a table in a schema.</li> <li>How to add data to a table.</li> </ul> <p>Great work!  To learn more about MySQL queries, be sure to check out the next section on SELECT statements.</p>"},{"location":"SelectStatements/","title":"Querying databases with SELECT statement","text":""},{"location":"SelectStatements/#overview","title":"Overview","text":"<p>Relational Database Management System is a program allow you to create databases, data tables, insert data into tables, edit, update, retrieve, delete data from tables, and manage user's permission. </p> <p>It includes five(5) main sets of SQL commands which are using frequently in MySQL:</p> <ul> <li> <p>Data Definition Language(DDL)</p> <ul> <li>CREATE</li> <li>ALTER</li> <li>DROP</li> </ul> </li> <li> <p>Data Query Language (DQL)</p> <ul> <li>SELECT</li> </ul> </li> <li> <p>Data Manipulation Language (DML)</p> <ul> <li>INSERT</li> <li>UPDATE</li> <li>DELETE</li> </ul> </li> <li> <p>Data Control Language (DCL)</p> <ul> <li>CREATE USER</li> <li>GRANT</li> <li>REVOKE</li> </ul> </li> <li> <p>Transaction Control Language (TCL)</p> <ul> <li>BEGIN</li> <li>COMMIT</li> <li>ROLLBACK</li> </ul> </li> </ul> <p>The goal of this section is walk you through a basic instruction of using SELECT commands in Data Query Language of MySQL to retrieve data from databases. </p>"},{"location":"SelectStatements/#basic-structure-of-select-statement","title":"Basic structure of SELECT statement","text":"<p>Basic SELECT statement in MySQL comes with five(5) clauses. To memorize the order of SQL queries, you can choose either this sentence \"Some French Waiters Grow Healthy Oranges\" or \"Sweaty Feet Will Give Horrible Odours!\", where the initial characters of this sentence align with those of SELECT statement  :</p> <p>Tip</p> <p><pre>\nSelect              Some              Sweaty\nFrom                French            Feet\nWhere               Waiters           Will\nGroup by            Grow              Give\nHaving              Healthy           Horrible\nOrder by            Oranges           Odours\n</pre></p> <p>When writing a query, all clauses in the SELECT statement apart from SELECT itself are considered optional. Each of these optional clauses can either be included, combined, or omitted as needed.</p>"},{"location":"SelectStatements/#sql-query-order-of-execution","title":"SQL Query order of execution","text":"<p>In SQL, the order you write the code isn't the same as how it executes. So, to understand how an SQL query works, it's important to know the right SQL execution structure. Then, you can user certain keywords when writing the query. </p> What the query looks like How it's executed Why it works this way <code>SELECT</code> <code>FROM</code> SQL starts with which table your query is taking data from <code>FROM</code> <code>WHERE</code> This is how SQL filters on rows. <code>WHERE</code> <code>GROUP BY</code> This is where your SQL query checks if you have an aggregation. <code>GROUP BY</code> <code>HAVING</code> <code>HAVING</code> requires a <code>GROUP BY</code> statement. <code>HAVING</code> <code>SELECT</code> Only after all these calculations have made will SQL <code>SELECT</code> which columns you want to see returned. <code>ORDER BY</code> <code>ORDER BY</code> This sorts the data returned. <code>LIMIT</code> <code>LIMIT</code> Lastly, you can limit the number of rows returned. source: Kumar, K. (2022, September 5). SQL Query Order of Execution, Medium(2022)"},{"location":"SelectStatements/#examples-of-using-select-statements","title":"Examples of using SELECT statements","text":""},{"location":"SelectStatements/#initial-setup","title":"Initial setup","text":"<p>Before exploring the simpliest SELECT statements, you need to initally set up</p> <ol> <li> <p>Open MySQL Workbench</p> </li> <li> <p>Choose your MySQL database by clicking on the connection.</p> <p>In the example, it is localhost <code>Local instance 3306</code></p> <p></p> <p>Note</p> <p>The connection you choose is where you have the database</p> </li> <li> <p>Fill in your username and password to login your connection</p> <p></p> </li> <li> <p>Choose the schema you want to work on by right clicking on the schema's name, click  [Set as Default Schema].</p> <p>Another way to do that, click [File], choose [Open SQL Script], and type <code>USE</code> &lt; schema's name &gt; in query script.</p> </li> </ol> <p>Now, you are all set to dive in SELECT statements in the following sections:</p>"},{"location":"SelectStatements/#select","title":"SELECT *","text":"<p><code>SELECT</code> used with an asterisk <code>(*)</code> will return all rows and all columns from the table we're quering.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>customer</code> with your table's name:</p> QueryExample <pre><code>SELECT * \nFROM &lt; table &gt;\n</code></pre> <pre><code>SELECT * \nFROM customer;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p> <p>Note</p> <ul> <li> <p>: Use this button when you want to run all queries at the same time.</p> </li> <li> <p>: Use this button when you want to run ONLY ONE specific query. To use it, you need to place your cursor at the query you want to run and click the button.</p> </li> </ul>"},{"location":"SelectStatements/#from","title":"FROM","text":"<p>Using <code>FROM</code> will show all rows and some columns from a single table</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>vendor</code> with your table's name, <code>v_name</code>, <code>v_areacode</code>, <code>v_phone</code>, <code>v_state</code> with your column's names:</p> QueryExample <pre><code>SELECT {column1, column2} \nFROM &lt;table&gt;\n</code></pre> <pre><code>SELECT v_name, v_areacode, v_phone, v_state \nFROM vendor;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p> <p>To show all rows and combine some columns from a single table, you can set a name for this combined column using <code>CONCAT</code> and <code>AS</code> followed by a name (as known as an <code>alias</code>) enclosed in double quote <code>\" \"</code>.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>customer</code> with your table's name, <code>CUS_LNAME</code>, <code>CUS_FNAME</code>, <code>CUS_AREACODE</code>, <code>CUS_PHONE</code> with your column's names:</p> QueryExample <pre><code>SELECT \n    CONCAT(column1,' ', column2) AS \"name\"\nFROM &lt;table&gt;\n</code></pre> <pre><code>SELECT \n    CONCAT(CUS_LNAME, ' ', CUS_FNAME) AS \"Name\",\n    CONCAT(CUS_AREACODE, ' ', CUS_PHONE) AS \"Fullphone\"\nFROM customer;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p>"},{"location":"SelectStatements/#order-by","title":"ORDER BY","text":"<p>Display all rows from a single table in a specific sequence. You can indicate the sorting arrangement using the <code>ORDER BY</code> clause.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>PRODUCT</code> with your table's name, <code>P_CODE</code>, <code>P_DESCRIPT</code>, <code>P_PRICE</code> with your column's names:</p> QueryExample <pre><code>SELECT { * | column1, column2 }\nFROM &lt;table&gt;\nORDER BY &lt;columnA&gt;; -- (1)!\n</code></pre> <ol> <li> columnA does not need to match the { column1, column2,... } list in SELECT clause.</li> </ol> <pre><code>SELECT P_CODE, P_DESCRIPT, P_PRICE\nFROM PRODUCT\nORDER BY P_PRICE DESC; -- (1)!\n</code></pre> <ol> <li> The default order in the <code>ORDER BY</code> clause is ascending. You can choose to include the keyword ASC after the column name, but it's optional. Additionally, using <code>DESC</code> specifies descending order.</li> </ol> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p> <p>In the <code>ORDER BY</code> clause, you can specify multiple columns for sorting, and the order will proceed sequentially from the first column onward.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>CUSTOMER</code> with your table's name, <code>CUS_LNAME</code>, <code>CUS_FNAME</code>, <code>CUS_INITIAL</code> with your column's names:</p> QueryExample <pre><code>SELECT { * | column1, column2 }\nFROM &lt;table&gt;\nORDER BY { columnA, columnB };\n</code></pre> <pre><code>SELECT CUS_LNAME, CUS_FNAME, CUS_INITIAL\nFROM CUSTOMER\nORDER BY CUS_LNAME, CUS_FNAME;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p>"},{"location":"SelectStatements/#where","title":"WHERE","text":"<p>Using <code>WHERE</code> clause to filter the rows from a table based on specified condition.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>CUSTOMER</code> with your table's name, <code>CUS_CODE</code>, <code>CUS_LNAME</code>, <code>CUS_FNAME</code>, <code>CUS_AREACODE</code>, <code>CUS_PHONE</code> with your column's names:</p> QueryExample <pre><code>SELECT { * | column1, column2 }\nFROM &lt;table&gt;\nWHERE &lt;condition&gt;;\n</code></pre> <pre><code>SELECT CUS_CODE, CUS_LNAME, CUS_FNAME, CUS_AREACODE, CUS_PHONE\nFROM CUSTOMER\nWHERE CUS_FNAME = 'Anne' OR CUS_LNAME = 'Brown';\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p> <p>Note</p> <ul> <li> <p>Conditions can be expressed in various forms:</p> <ul> <li>Comparison operators</li> <li>Logical operators</li> <li>Ranges</li> <li>Lists of values indicated by</li> <li>Pattern matching</li> </ul> </li> <li> <p>NULL values</p> </li> </ul>"},{"location":"SelectStatements/#group-by","title":"GROUP BY","text":"<p>Using <code>GROUP BY</code> clause to group rows with the same value. This clause is usually used with aggregate functions.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>VENDOR</code> with your table's name, <code>V_STATE</code> with your column's name:</p> QueryExample <pre><code>SELECT &lt;AGGREGATE(column1)&gt; { columnA, columnB...} -- (1)!\nFROM &lt;table&gt;\nGROUP BY { columnA, columnB };\n</code></pre> <ol> <li>Replace AGGREGATE with one of the five(5) aggregate functions.</li> </ol> <pre><code>SELECT V_STATE, COUNT(*) AS 'Count by State'\nFROM VENDOR\nGROUP BY V_STATE;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p>"},{"location":"SelectStatements/#having","title":"HAVING","text":"<p>Using <code>HAVING</code> clause in SQL to filter the results of grouped data based on specified conditions. It's often used after the <code>GROUP BY</code> clause to apply conditions to the groups created by <code>GROUP BY</code>. Specifically, <code>HAVING</code> is used to filter groups based on aggregate values, such as <code>SUM</code>, <code>COUNT</code>, <code>AVG</code>, <code>MAX</code>, <code>MIN</code>, etc.</p> <ol> <li> <p>Add the query example below in SQL script. Replace <code>employee</code> with your table's name, <code>EMP_LNAME</code>, with your column's name:</p> QueryExample <pre><code>SELECT &lt;AGGREGATE(column1)&gt; { columnA, columnB...} -- (1)!\nFROM &lt;table&gt;\nGROUP BY { columnA, columnB }\nHAVING &lt;restriction&gt;;\n</code></pre> <ol> <li>Replace AGGREGATE with one of the five(5) aggregate functions.</li> </ol> <pre><code>SELECT EMP_LNAME, COUNT(*)\nFROM employee\nGROUP BY EMP_LNAME\nHAVING COUNT(*) &gt;= 2;\n</code></pre> </li> <li> <p>Click  to run the query:</p> </li> </ol> <p>Success</p> <p></p> <p>Congratulation </p> <p>Now that you're familiar with the simplest SELECT statements in MySQL, you can further practice and enhance your skills by exploring the following resources:</p> <ul> <li>SQL Bolt</li> <li>SQL Zoo</li> <li>SQL Practice</li> </ul> <p>Happy practicing! </p>"},{"location":"SelectStatements/#conclusion","title":"Conclusion","text":"<p>By going through this section, you will achieve the following:</p> <ul> <li>Getting acknowledgement about 5 sets of SQL commands</li> <li>Understanding and proficiency in writing the simplest SELECT statements</li> </ul> <p>Great work!  If you encounter any issues while running MySQL queries, be sure to check out the next section for assistance: Troubleshooting</p>"},{"location":"Troubleshooting/","title":"Troubleshooting","text":"Symptoms Probable Cause Action <code>Error: 'mysql' is not recognized as an internal or external command, operable program or batch file</code> The system doesn't recognize it <ol><li>Open Windows Explorer</li><li>Right click [This PC]</li><li>Click [Properties]</li><li>Go to [Advanced System Settings]</li><li>Click Environment Variables</li><li> Select Path and click Edit</li><li> Click [New]</li><li>Click [Browse]</li><li>Find C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\\ </li><li>Click [Ok]</li></ol> <code>Error 1064: Syntax error</code> You missed data or mistyped commands. Proofread your code and correct mistyped commands. <code>Error 1292: incorrect date/datetime value</code> You are trying to insert data that is incompatible with the column's data type. Make sure you are inserting the data into the right corresponding columns and are following table rules and column data types. <code>Error 1366: incorrect integer/string/decimal value</code> You are trying to insert data that is incompatible with the column's data type. Make sure you are inserting the data into the right corresponding columns and are following table rules and column data types. &lt; schema's name &gt; doesn't exist &lt; table &gt; Your current schema is not the schema you want to work on. Make sure you set the schema having a table you want to work on as a default schema before running queries. Newly created schema is not visible Schema list has not updated <ol><li>Right click the empty white space in the navigator section</li><li>Click on refresh all from the dropdown menu.</li></ol> Newly created table is not visible Schema has not updated <ol><li>Right click the empty white space in the navigator section</li><li>Click on refresh all from the dropdown menu.</li></ol>"}]}